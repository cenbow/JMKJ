
package com.cn.jm.controller.shop.system;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import com.cn._gen.model.Spec;
import com.cn._gen.model.SpecAttribute;
import com.cn.jm._dao.goods.JMGoodsModelsDao;
import com.cn.jm._dao.spec.JMSpecAttributeDao;
import com.cn.jm._dao.spec.JMSpecDao;
import com.cn.jm.core.JMConsts;
import com.cn.jm.core.tool.JMToolString;
import com.cn.jm.core.utils.util.JMResult;
import com.cn.jm.core.web.controller.JMBaseSystemController;
import com.cn.jm.core.web.dao.JMBaseDao;
import com.cn.jm.interceptor.SystemLoginInterceptor;
import com.cn.jm.web.core.router.JMRouterMapping;
import com.jfinal.aop.Before;
import com.jfinal.aop.Inject;
import com.jfinal.plugin.activerecord.Page;

/**
 * Generated by 广州小跑robot.
 */
@JMRouterMapping(url = SystemSpecController.url)
@Before(value={SystemLoginInterceptor.class})
public class SystemSpecController extends JMBaseSystemController {
	
	public static final String path = JMConsts.base_view_url+"/system/shop/spec";
	public static final String url ="/system/shop/spec";
	
	@Inject
	public JMSpecDao specDao;
	@Inject
	public JMSpecAttributeDao specAttributeDao ;
	@Inject
	public JMGoodsModelsDao goodsModelsDao ;
	

	
	public void index(){
		page();
	}

	
	public void page(){
		String keyword = getPara("keyword","");
		Integer id = getParaToInt("id",null);
		
		String startTime = getPara("startTime","");
		String endTime = getPara("endTime","");
		
		Integer pageNumber = getParaToInt(0, 1);
		Integer pageSize = JMConsts.pageSize;
		
		HashMap<String, Object> andpm = new HashMap<String, Object>();
		HashMap<String, Object> likepm = new HashMap<String, Object>();
		HashMap<String, Object> orpm = new HashMap<String, Object>();
		
		if (JMToolString.isNotEmpty(keyword)) {
			likepm.put("value", keyword);
		}
		if (id != null) {
			andpm.put("id", id);
		}
		Page<Spec> page = null;
		
		if (JMToolString.isNotEmpty(startTime) && JMToolString.isNotEmpty(endTime)) {
			page = specDao.page(pageNumber, pageSize, "", andpm, orpm, likepm, startTime,endTime,"id", JMBaseDao.DESC, true);
		}else {
			page = specDao.page(pageNumber, pageSize, "", andpm, orpm, likepm, "id", JMBaseDao.DESC, true);
		}
		for(Spec spec : page.getList()){
			spec.put("attrs",specAttributeDao.getAttrsBySpec(spec.getId()));
		}
		setAttr("id", id);
		setAttr("keyword", keyword);
		setAttr("startTime", startTime);
		setAttr("endTime", endTime);
		setAttr("page", page);
		
		jump();
		render(path+"/page.html");
	}
	
	
	public void add(){
		setToken();
		
		setAttr("action", JMConsts.ACTION_ADD);
		setAttr("spec", new Spec());
		List<SpecAttribute> list = new ArrayList<>();
		list.add(new SpecAttribute());
		setAttr("specAttrs",list);
		setAttr("mdList",goodsModelsDao.list(false));
		render(path+"/add.html");
	}
	
	public void save(){
		String []attrs = getParaValues("attrs");
		Spec spec = getModel(Spec.class);
		if(specDao.add(spec.getValue(), attrs)) {
			JMResult.success(this,"添加成功");
			return ;
		}else {
			JMResult.fail(this,"添加失败");
		}
	}
	
	
	public void edit(){
		setToken();
		int id = getParaToInt("id");
		setAttr("spec", specDao.getById(id,false));
		setAttr("mdList",goodsModelsDao.list(false));
		setAttr("specAttrs",specAttributeDao.listAttrsBySpecId(id));
		render(path+"/edit.html");
	}
	
	public void update(){
		Spec spec = getModel(Spec.class);
		String []attrs = getParaValues("attrs");
		Integer []attrsId = getParaValuesToInt("attrsId");
		boolean result = specDao.updateSpec(spec, attrsId, attrs);
		if(result){
			JMResult.success(this, "编辑成功");
		}else{
			JMResult.fail(this, "编辑失败");
		}
	}
	
	
	public void delete(){
		int id = getParaToInt("id");
		
		if (specDao.deleteById(id)) {
			JMResult.success(this, "删除成功");
		}else {
			JMResult.fail(this, "删除失败");
		}
	}
	
	
	public void dels(){
		Integer[] ids = getParaValuesToInt("ids");
		if(ids != null){
			boolean result = specDao.deleteByIds(ids);
			if (result) {
				JMResult.success(this, "删除成功");
			}else {
				JMResult.fail(this, "删除失败");
			}
		}else {
			JMResult.fail(this, "请选择需要删除的数据");
		}
	}

	
}