
package com.cn.jm.controller.base.system;

import java.util.Arrays;
import java.util.Date;

import com.cn._gen.model.ExtractLog;
import com.cn.jm.core.JMConsts;
import com.cn.jm.web.core.router.JMRouterMapping;
import com.cn.jm.core.utils.util.JMResult;
import com.cn.jm.core.utils.util.JMUploadKit;
import com.cn.jm.core.web.controller.JMBaseSystemController;
import com.cn.jm.interceptor.PowerInterceptor;
import com.cn.jm.interceptor.SystemLoginInterceptor;
import com.cn.jm.service.JMExtractLogService;
import com.cn.jm.util.ExportExcelUtil;
import com.cn.jm.util.UploadUtil;
import com.jfinal.aop.Before;
import com.jfinal.aop.Inject;
import com.jfinal.plugin.activerecord.Page;

/**
 * Generated by 广州小跑robot.
 */
@JMRouterMapping(url = SystemExtractLogController.URL)
@Before(SystemLoginInterceptor.class)
public class SystemExtractLogController extends JMBaseSystemController {
	
	public static final String PATH = JMConsts.base_view_url+"/system/extractlog";
	static final String URL ="/system/extract/log";
	private static final String ADD_URL = PATH + "/add.html";
	private static final String EDIT_URL = PATH + "/edit.html";
	private static final String PAGE_URL = PATH + "/page.html";

	@Inject
	JMExtractLogService jmExtractlogService;
	
//	@Before(PowerInterceptor.class)
	public void index(){
		page();
	}

//	@Before(PowerInterceptor.class)
	public void page(){
		String mobile = getPara("mobile","");
		String nick = getPara("nick", "");
		Integer state = getParaToInt("state", -1);
		String applyStartTime = getPara("applyStartTime","");
		String applyEndTime = getPara("applyEndTime","");
		String examineStartTime = getPara("examineStartTime", "");
		String examineEndTime = getPara("examineEndTime", "");
		Integer pageNumber = getParaToInt(0, 1);
		Integer pageSize = JMConsts.pageSize;
		Page<ExtractLog> page = jmExtractlogService.pageSys(pageNumber, pageSize, mobile, nick, state, applyStartTime,
				applyEndTime, examineStartTime, examineEndTime, false);
		
		setAttr("mobile", mobile).setAttr("nick", nick).setAttr("state", state).setAttr("applyStartTime", applyStartTime)
		.setAttr("applyEndTime", applyEndTime).setAttr("examineStartTime", examineStartTime)
		.setAttr("examineEndTime", examineEndTime).setAttr("page", page);
		
		jump();
		render(PAGE_URL);
	}
	
	/**
	 * 同意提现
	 */
	public void agree() {
		int extractLogId = getParaToInt("extractLogId", 0);
		if(jmExtractlogService.agree(extractLogId)) {
			JMResult.success(this, "操作成功");
		}else {
			JMResult.fail(this, "操作失败,请稍后重试");
		}
	}
	
	/**
	 * 批量通过
	 */
	public void batchAgree() {
		Integer[] extractLogIds = getParaValuesToInt("ids");
		if(jmExtractlogService.batchAgree(Arrays.asList(extractLogIds))) {
			JMResult.success(this, "操作成功");
		}else {
			JMResult.fail(this, "操作失败,请稍后重试");
		}
	}
	
	/**
	 * 拒绝提现
	 */
	public void refuse() {
		int extractLogId = getParaToInt("extractLogId", 0);
		String reason = getPara("reason");
		if(jmExtractlogService.refuse(extractLogId, reason)) {
			JMResult.success(this, "操作成功");
		}else {
			JMResult.fail(this, "操作失败,请稍后重试");
		}
	}
	
	public void export() {
		String mobile = getPara("mobile","");
		String nick = getPara("nick", "");
		Integer state = getParaToInt("state", -1);
		String applyStartTime = getPara("applyStartTime","");
		String applyEndTime = getPara("applyEndTime","");
		String examineStartTime = getPara("examineStartTime", "");
		String examineEndTime = getPara("examineEndTime", "");
		renderFile(jmExtractlogService.export(mobile, nick, state, applyStartTime, applyEndTime, examineStartTime, examineEndTime, false));
	}
	
//	@Before(PowerInterceptor.class)
//	public void add(){
//		setToken();
//		
//		setAttr("action", JMConsts.ACTION_ADD);
//		setAttr("extractlog", new ExtractLog());
//		render(ADD_URL);
//	}
//
//	@Before(PowerInterceptor.class)
//	public void save(){
//		String image = UploadUtil.uploadImg(this, "image", "/image");
//		ExtractLog extractlog = getModel(ExtractLog.class);
//		extractlog.setCreateTime(new Date());
//		if(image != null)
//			extractlog.setImage(image);
//		if(extractlogService.save(extractlog)){
//			JMResult.success(this, "添加成功");
//		}else{
//			JMResult.fail(this, "添加失败");
//		}
//	}
//	
//	@Before(PowerInterceptor.class)
//	public void edit(){
//		setToken();
//		int id = getParaToInt("id");
//		
//		setAttr("extractlog", extractlogService.selectById(id));
//		render(EDIT_URL);
//	}
//
//	@Before(PowerInterceptor.class)
//	public void update(){
//		String image = UploadUtil.uploadImg(this, "image", "/image");
//		ExtractLog extractlog = getModel(ExtractLog.class);
//		if(image != null)
//			extractlog.setImage(image);
//		if(extractlogService.update(extractlog)){
//			JMResult.success(this, "编辑成功");
//		}else{
//			JMResult.fail(this, "编辑失败");
//		}
//	}
//	
//	@Before(PowerInterceptor.class)
//	public void delete(){
//		int id = getParaToInt("id");
//		
//		if (extractlogService.deleteById(id)) {
//			JMResult.success(this, "删除成功");
//		}else {
//			JMResult.fail(this, "删除失败");
//		}
//	}
//	
//	@Before(PowerInterceptor.class)
//	public void dels(){
//		Integer[] ids = getParaValuesToInt("ids");
//		if(ids != null){
//			boolean result = extractlogService.deleteByIds(ids);
//			if (result) {
//				JMResult.success(this, "删除成功");
//			}else {
//				JMResult.fail(this, "删除失败");
//			}
//		}else {
//			JMResult.fail(this, "请选择需要删除的数据");
//		}
//	}

}