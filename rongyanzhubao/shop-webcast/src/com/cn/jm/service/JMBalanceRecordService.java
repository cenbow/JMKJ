
package com.cn.jm.service;

import com.jfinal.aop.Inject;
import com.jfinal.plugin.activerecord.Page;

import java.math.BigDecimal;
import java.text.ParseException;
import java.text.SimpleDateFormat;

import com.cn._gen.model.BalanceRecord;
import com.cn._gen.model.Goods;
import com.cn._gen.model.Order;
import com.cn.jm._dao.account.JMAccountUserDao;
import com.cn.jm._dao.balance.ExtractEnum;
import com.cn.jm._dao.balance.JMBalanceRecordDao;
import com.cn.jm.core.tool.JMToolString;
import com.cn.jm.information.BasicsInformation;
import com.cn.jm.util.TimeUtil;
/**
 * Generated by 小跑科技robot  .
 */
public class JMBalanceRecordService extends BasicsService<BalanceRecord> {
	
	@Inject
	JMAccountUserDao accountUserDao;
	@Inject
	JMBalanceRecordDao balanceRecordDao;
	@Inject
	JMGoodsService goodsService;
	
	public Page<BalanceRecord> page(Integer pageNumber, Integer pageSize,Integer accountId,
			Integer type, Integer msgType, String startTime,String endTime, boolean isCache) throws ParseException{
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		String end = endTime;
		if(JMToolString.isNotEmpty(endTime)) {
			end = TimeUtil.addReduceDaysS(1, sdf.parse(endTime));
		}
		return balanceRecordDao.page(pageNumber, pageSize, accountId, type, msgType, startTime, end, isCache);
	}

	/**
	 * 生成用户确认收货后商家获取金额的账单
	 * @param order
	 * @return 
	 */
	public boolean confirmReceipt(Order order) {
		try {
			Goods goods = goodsService.selectById(order.getGoodsId());
			if(goods == null) 
				return false;
			balanceRecordDao.saveRecord(goods.getUserId(), order.getAccountId(), order.getId(), ExtractEnum.TYPE_IN, ExtractEnum.MSG_TYPE_SALE, BasicsInformation.BALANCE_RECORD_ORDER_MESSAGE, order.getOriginalPrice());
			accountUserDao.changeBalance(goods.getUserId(), order.getOriginalPrice());
			
			Integer resaleAccountId = order.getResaleAccountId();
			if(resaleAccountId != null) {
				BigDecimal getResalePrice = order.getMoney().subtract(order.getOriginalPrice());
				balanceRecordDao.saveRecord(resaleAccountId, order.getAccountId(), order.getId(), ExtractEnum.TYPE_IN, ExtractEnum.MSG_TYPE_SALE, BasicsInformation.BALANCE_RECORD_ORDER_MESSAGE, getResalePrice);
				accountUserDao.changeBalance(resaleAccountId, getResalePrice);
			}
			return true;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return false;
	}
	
}