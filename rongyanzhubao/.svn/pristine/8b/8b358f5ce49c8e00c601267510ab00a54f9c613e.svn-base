
package com.cn.jm.controller.base.system;

import java.util.Date;
import java.util.List;

import com.cn._gen.model.Img;
import com.cn.jm._dao.img.ImgEnum;
import com.cn.jm.core.JMConsts;
import com.cn.jm.core.utils.util.JMResult;
import com.cn.jm.core.web.controller.JMBaseSystemController;
import com.cn.jm.information.BasicsInformation;
import com.cn.jm.interceptor.SystemLoginInterceptor;
import com.cn.jm.service.JMGoodsService;
import com.cn.jm.service.JMImgService;
import com.cn.jm.util.UploadUtil;
import com.cn.jm.web.core.router.JMRouterMapping;
import com.jfinal.aop.Before;
import com.jfinal.aop.Inject;
import com.jfinal.plugin.activerecord.Page;

/**
 * Generated by 广州小跑robot.
 */
@JMRouterMapping(url = SystemBannerController.URL)
@Before(SystemLoginInterceptor.class)
public class SystemBannerController extends JMBaseSystemController {
	
	public static final String PATH = JMConsts.base_view_url+"/system/base/banner";
	static final String URL ="/system/base/banner";
	private static final String ADD_URL = PATH + "/add.html";
	private static final String EDIT_URL = PATH + "/edit.html";
	private static final String PAGE_URL = PATH + "/page.html";

	@Inject
	JMImgService imgService;
	@Inject
	JMGoodsService goodsService;
	
	public void index(){
		page();
	}

	
	public void page(){
		String keyword = getPara("keyword","");
		Integer id = getParaToInt("id");
		
		String startTime = getPara("startTime","");
		String endTime = getPara("endTime","");
		
		Integer pageNumber = getParaToInt(0, 1);
		Integer pageSize = JMConsts.pageSize;
		
		Page<Img> page = imgService.page(pageNumber, pageSize, id, keyword, startTime, endTime, ImgEnum.BANNER_TYPE);
		
		setAttr("id", id);
		setAttr("keyword", keyword);
		setAttr("startTime", startTime);
		setAttr("endTime", endTime);
		setAttr("page", page);
		
		jump();
		render(PAGE_URL);
	}
	
	
	public void add(){
		setToken();
		List<Img> bannerList = imgService.selectByKeyAndValue(" type = ", ImgEnum.BANNER_TYPE);
		int bannerNum = bannerList == null?0:bannerList.size();
		setAttr("bannerNum", bannerNum);
		setAttr("goodsList", goodsService.selectMallGoods());
		setAttr("action", JMConsts.ACTION_ADD);
		setAttr("img", new Img());
		render(ADD_URL);
	}

	
	public void save(){
		if(imgService.canSaveBanner()) {
			String image = UploadUtil.uploadImg(this, "image", "/image");
			Img img = getModel(Img.class);
			img.setCreateTime(new Date());
			if(image != null)
				img.setImage(image);
			if(imgService.save(img)){
				JMResult.success(this, "添加成功");
			}else{
				JMResult.fail(this, "添加失败");
			}
		}else {
			JMResult.fail(this, "轮播图最多能新增" + BasicsInformation.BANNER_IMAGE_MAX_NUM + "张");
		}
	}
	
	
	public void edit(){
		setToken();
		int id = getParaToInt("id");
		setAttr("goodsList", goodsService.selectMallGoods());
		setAttr("img", imgService.selectById(id));
		render(EDIT_URL);
	}

	
	public void update(){
		String image = UploadUtil.uploadImg(this, "image", "/image");
		Img img = getModel(Img.class);
		img.setCreateTime(new Date());
		if(image != null)
			img.setImage(image);
		if(imgService.update(img)){
			JMResult.success(this, "编辑成功");
		}else{
			JMResult.fail(this, "编辑失败");
		}
	}
	
	
	public void delete(){
		int id = getParaToInt("id");
		
		if (imgService.deleteById(id)) {
			JMResult.success(this, "删除成功");
		}else {
			JMResult.fail(this, "删除失败");
		}
	}
	
	public void dels(){
		Integer[] ids = getParaValuesToInt("ids");
		if(ids != null){
			boolean result = imgService.deleteByIds(ids);
			if (result) {
				JMResult.success(this, "删除成功");
			}else {
				JMResult.fail(this, "删除失败");
			}
		}else {
			JMResult.fail(this, "请选择需要删除的数据");
		}
	}

}