
package com.cn.jm._dao.room;

import com.cn._gen.dao.BroadcastRequestDao;
import com.cn._gen.model.BroadcastRequest;
import com.cn.jm.util.SqlUtil;
import com.cn.jm.util.sqltool.JMCommonDao;
import com.cn.jm.util.sqltool.Query;
import com.jfinal.kit.HashKit;
import com.jfinal.plugin.activerecord.Page;


/**
 * Generated by 广州小跑robot.
 */
public class JMBroadcastRequestDao extends BroadcastRequestDao{
	
	private JMCommonDao commonDao = JMCommonDao.jmd;
	
	public Page<BroadcastRequest> page(Integer pageNumber, Integer pageSize,Integer id,String keyword,String startTime,String endTime,boolean isCache){
		StringBuilder selectSql = new StringBuilder("SELECT id ");
		StringBuilder fromSql = new StringBuilder(" FROM ");
		fromSql.append(tableName);
		fromSql.append(" :WHERE ");
		SqlUtil.addWhere(fromSql," AND id = ",id);
		SqlUtil.addLike(fromSql," AND name","%",keyword,"%");
		SqlUtil.addBetweenTime(fromSql, startTime, endTime, " AND createTime");
		String strFromSql = fromSql.toString();
		String strSelectSql = selectSql.toString();
		return isCache?dao.paginateByCache(cacheName,HashKit.md5(selectSql.append(strFromSql).toString()), pageNumber, pageSize,false,strSelectSql, strFromSql)
			:dao.paginate(pageNumber, pageSize, false, strSelectSql,strFromSql);
	}
	
	
	public BroadcastRequest selectRequest(Integer accountId,Integer merchantAccountId) {
		Query query = new Query();
		query.put("and accountId=", accountId);
		query.put("and isShow=", RequerstEnum.NOR_SHOW.getValue());
		query.put("and merchantAccountId=", merchantAccountId);
		String select = "select *";
		return commonDao.selectOne(BroadcastRequest.class, query, select);
	}
	
	public BroadcastRequest selectAgreeRequest(Integer accountId) {
		Query query = new Query();
		query.put("and accountId=", accountId);
		query.put("and state=", RequerstEnum.AGREE.getValue());
		query.put("and isShow=", RequerstEnum.NOR_SHOW.getValue());
		String select = "select *";
		return commonDao.selectOne(BroadcastRequest.class, query, select);
	}
	
	public BroadcastRequest selectRequest(Integer merchantAccountId,RequerstEnum requerstEnum) {
		Query query = new Query();
		query.put("and state=", requerstEnum.getValue());
		query.put("and isShow=", RequerstEnum.NOR_SHOW.getValue());
		query.put("and merchantAccountId=", merchantAccountId);
		String select = "select *";
		return commonDao.selectOne(BroadcastRequest.class, query, select);
	}
	
}
