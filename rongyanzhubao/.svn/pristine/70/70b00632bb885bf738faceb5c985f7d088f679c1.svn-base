
package com.cn.jm.service;

import com.cn.jm._dao.img.ImgEnum;
import com.cn.jm._dao.img.JMImgDao;
import com.cn.jm.information.BasicsInformation;
import com.jfinal.aop.Inject;
import com.jfinal.plugin.activerecord.Page;

import cn.hutool.core.date.DateUtil;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.List;

import com.cn._gen.model.Img;

/**
 * Generated by 小跑科技robot .
 */
public class JMImgService extends BasicsService<Img> {

	@Inject
	JMImgDao imgDao;

	public Page<Img> page(Integer pageNumber, Integer pageSize, Integer id, String keyword, String startTime,
			String endTime, ImgEnum type) {
		return imgDao.page(pageNumber, pageSize, id, keyword, startTime, endTime, type, false);
	}

	/**
	 * 添加商品的关联图片
	 * 
	 * @param goodsId
	 * @param detailImageList
	 * @param goodsImageList
	 * @return
	 */
	public boolean inserImages(Integer goodsId, List<String> detailImageList, List<String> goodsImageList) {
		detailImageList = detailImageList == null ? Collections.emptyList() : detailImageList;
		goodsImageList =	goodsImageList == null ? Collections.emptyList() : goodsImageList;
		if((goodsImageList.size() + detailImageList.size() > 0)) {
			try {
				imgDao.inserGoodsImages(goodsId, detailImageList, goodsImageList,
						DateUtil.format(new Date(), BasicsInformation.DATE_FORMAT));
				return true;
			} catch (Exception e) {
				System.out.println(detailImageList);
				System.out.println(goodsImageList);
				e.printStackTrace();
			}
		}
		return false;
	}

	/**
	 * 添加商品的关联图片
	 * 
	 * @param goodsId
	 * @param detailImageList
	 * @param goodsImageList
	 * @return
	 */
	public boolean inserImages(Integer goodsId, ArrayList<String> imageList, ImgEnum imgType) {
		if (imageList != null && imageList.size() > 0) {
			try {
				imgDao.insertImages(goodsId, imageList, DateUtil.format(new Date(), BasicsInformation.DATE_FORMAT), imgType.getCode());
				return true;
			} catch (Exception e) {
				System.out.println(imageList);
				e.printStackTrace();
			}
		}
		return false;
	}

	public List<Img> selectByTypeAndIds(Integer ids, ImgEnum imgType) {
		return imgDao.selectByTypeAndIds(ids, imgType);
	}

	public Integer countImageNum(Integer ids, ImgEnum imgType) {
		return imgDao.countImageNum(ids, imgType);
	}

	/**
	 * 根据条件删除商品详情图和主图
	 * 
	 * @param detailNotInIds
	 * @param goodsNotInIds
	 * @param goodsId
	 */
	public void deleteGoodsImage(String[] detailNotInIds, String[] goodsNotInIds, Integer goodsId) {
		imgDao.deleteNotInByIdsAndType(goodsId, ImgEnum.GOODS_DETAILS_TYPE, detailNotInIds);
		imgDao.deleteNotInByIdsAndType(goodsId, ImgEnum.GOODS_OWNER_TYPE, goodsNotInIds);
	}

	public int deleteResaleGoodsImage(int resaleGoodsId, String[] notInIds) {
		return imgDao.deleteNotInByIdsAndType(resaleGoodsId, ImgEnum.RESALE_GOODS__DETAILS_TYPE, notInIds);
	}

	public boolean canSaveBanner() {
		List<Img> bannerList = selectByKeyAndValue(" type = ", ImgEnum.BANNER_TYPE);
		return bannerList == null ? true : bannerList.size() < BasicsInformation.BANNER_IMAGE_MAX_NUM;
	}
}
