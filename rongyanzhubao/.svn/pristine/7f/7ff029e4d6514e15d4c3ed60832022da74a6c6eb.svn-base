
package com.cn.jm._dao.notice;

import java.util.Date;
import java.util.HashMap;

import com.cn._gen.dao.NoticeAccountDao;
import com.cn._gen.model.NoticeAccount;
import com.cn.jm.core.utils.util.JMResult;
import com.jfinal.plugin.activerecord.Db;


/**
 * Generated by 广州小跑robot.
 */
public class JMNoticeAccountDao extends NoticeAccountDao{
	
	public static final int STATE_UN_READ = 0;//未读
	public static final int STATE_READ = 1;//已读
	
	public boolean read(int noticeId,int accountId) {
		NoticeAccount noticeAccount = get(noticeId, accountId);
		if (noticeAccount == null) {
			noticeAccount = new NoticeAccount();
			noticeAccount.setAccountId(accountId);
			noticeAccount.setNoticeId(noticeId);
			noticeAccount.setState(STATE_READ);
			noticeAccount.setReadTime(new Date());
			return save(noticeAccount);
		}else {
			if (noticeAccount.getState() == STATE_READ) {
				return false;
			}else {
				noticeAccount.setState(STATE_READ);
				noticeAccount.setReadTime(new Date());
				return update(noticeAccount);
			}
		}
	}
	
	public NoticeAccount get(int noticeId,int accountId) {
		HashMap<String, Object> param = new HashMap<>();
		param.put("noticeId", noticeId);
		param.put("accountId", accountId);
		return get(param, true);
	}

	public JMResult delete(int noticeId, Integer accountId) {
		NoticeAccount noticeAccount = get(noticeId, accountId);
		if(noticeAccount == null) {
			return JMResult.fail("","删除消息不存在");
		}
		if(delete(noticeAccount)) {
			return JMResult.create().success("删除成功");
		}
		return JMResult.fail("","删除失败");
	}

	public boolean sendNotice(Integer noticeId, Integer accountId) {
		NoticeAccount noticeAccount = new NoticeAccount();
		noticeAccount.setAccountId(accountId);
		noticeAccount.setNoticeId(noticeId);
		return save(noticeAccount);
	}

	/**
	 * 获取未读总数
	 * @param id
	 * @return 
	 */
	public Long unReadCount(Integer accountId) {
		return Db.queryLong("SELECT COUNT(*) FROM tb_notice AS a LEFT JOIN tb_notice_account AS b ON a.id = b.noticeId WHERE (a.type = 1 AND b.accountId = ? AND b.state = 0) OR (a.type = 0 AND b.state IS NULL) ORDER BY a.id DESC", accountId);
	}
	

}
