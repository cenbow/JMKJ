//
//package com.cn.jm._dao.account;
//
//import java.util.HashMap;
//import java.util.List;
//import java.util.Random;
//
//import com.cn._gen.dao.AccountExpandDao;
//import com.cn._gen.model.AccountExpand;
//import com.cn._gen.model.Area;
//import com.cn.jm._dao.area.JMAreaDao;
//import com.cn.jm.core.db.JMToolSql;
//import com.cn.jm.core.tool.security.JMToolMD5;
//import com.jfinal.aop.Inject;
//import com.jfinal.plugin.activerecord.Db;
//import com.jfinal.plugin.activerecord.Page;
//
//
///**
// * Generated by 广州小跑robot.
// */
//public class JMAccountExpandDao extends AccountExpandDao{
//	
//	public static final int STATE_OFF = 0;//离线
//	public static final int STATE_ON = 1;//在线
//	public static final int STATE_BUSY = 2;//忙碌
//	public static final int STATE_NOT_DISTURB = 3;//免打扰
//	
//	private final String payPwd = "xiaopaoB2c";//支付密码
//	
//	@Inject
//	public JMAccountDao accountDao;
//	@Inject
//	public JMAreaDao areaDao;
//	
//	
//	
//	
//	public AccountExpand getByAccountId(int accountId) {
//		HashMap<String, Object> param = new HashMap<>();
//		param.put("accountId", accountId);
//		AccountExpand accountExpand = get(param, false);
//		if (accountExpand != null && accountExpand.getShengId() != null) {
//			Area area = areaDao.getById(accountExpand.getShengId());
//			accountExpand.put("sheng", area);
//		}
//		if (accountExpand != null && accountExpand.getShiId() != null) {
//			Area area = areaDao.getById(accountExpand.getShiId());
//			accountExpand.put("shi", area);
//		}
//		if (accountExpand != null && accountExpand.getQuId() != null) {
//			Area area = areaDao.getById(accountExpand.getQuId());
//			accountExpand.put("qu", area);
//		}
//		
//		return accountExpand;
//	}
//	
//	
//	/**
//	 * 随机获取一位空闲用户
//	 * @return
//	 */
//	public AccountExpand getFree(int type,int accountId) {
//		List<AccountExpand> accountExpands = pageFree(1, 20,type,accountId).getList();
//		if (accountExpands.size() != 0) {
//			Random random = new Random(accountExpands.size());
//			int index = random.nextInt(accountExpands.size());
//			return accountExpands.get(index);
//		}else {
//			return null;
//		}
//	}
//	
//	/**
//	 * 搜索用户
//	 * @param pageNumber
//	 * @param pageSize
//	 * @param keyword
//	 * @param type:身份类型:-1超级用户0系统管理员1普通用户2商家3主播
//	 * @return
//	 */
//	public Page<AccountExpand> search(int pageNumber, int pageSize,String keyword,int type) {
//		String sql = "FROM tb_account_expand AS a LEFT JOIN tb_account AS b ON a.accountId = b.id WHERE b.type = ? AND a.nick LIKE ? ORDER BY a.id DESC";
//		Page<AccountExpand> page = dao.paginate(pageNumber, pageSize, "SELECT * ", sql,type,"'%"+keyword+"%'");
//		for (int i = 0; i < page.getList().size(); i++) {
//			AccountExpand accountExpand = page.getList().get(i);
//			accountExpand.remove("password", "salt");
//		}
//		return page;
//	}
//	
////	/**
////	 * 搜索用户(含是否关注)
////	 * @param pageNumber
////	 * @param pageSize
////	 * @param keyword
////	 * @param type
////	 * @return
////	 */
////	public Page<AccountExpand> searchWithFollow(int pageNumber, int pageSize,String keyword,int type,int accountId) {
////		String from = "FROM tb_account_expand AS a LEFT JOIN tb_account AS b ON a.accountId = b.id WHERE b.type = ? AND a.nick LIKE concat('%',?,'%') ORDER BY a.id DESC";
////		Page<AccountExpand> page = dao.paginate(pageNumber, pageSize, "SELECT a.nick,a.avatar,a.accountId", from,  type,keyword);
////		for (int i = 0; i < page.getList().size(); i++) {
////			AccountExpand accountExpand = page.getList().get(i);
////			accountExpand.remove("password", "salt");
////			boolean isFollow = followDao.check(accountId, accountExpand.getAccountId());
////			accountExpand.put("isFollow", isFollow);
////		}
////		return page;
////	}
//	
//	/**
//	 * 搜索用户
//	 * @param pageNumber
//	 * @param pageSize
//	 * @param keyword
//	 * @param type:身份类型:-1超级用户0系统管理员1普通用户2商家3主播
//	 * @return
//	 */
////	public Page<AccountExpand> search(int pageNumber, int pageSize,String keyword,int type) {
////		String sql = "FROM tb_account_expand AS a LEFT JOIN tb_account AS b ON a.accountId = b.id "
////				+ "WHERE a.isLogin = ? AND a.state = ? AND b.type = ? AND a.nick LIKE ? ORDER BY a.id DESC";
////		LinkedHashMap<String, Object> whereParam = new LinkedHashMap<>();
////		whereParam.put("and a.state=", STATE_ON);
////		whereParam.put("and b.type=", type);
////		JMCommonDao.putLike(whereParam, "and a.nick", keyword);
////		String select = "select *"; 
////		String inner = "a LEFT JOIN tb_account AS b ON a.accountId = b.id :where ORDER BY a.id DESC";
////		Page<AccountExpand> page = commonDao.page(AccountExpand.class, whereParam, pageNumber, pageSize, select,inner);
////		if(page == null || page.getList() ==null)
////			return page;
////		
////		for (int i = 0; i < page.getList().size(); i++) {
////			AccountExpand accountExpand = page.getList().get(i);
////			accountExpand.remove("password", "salt");
////		}
////		return page;
////	}
//	
//	
//	/**
//	 * 获取空闲用户列表
//	 * @param pageNumber
//	 * @param pageSize
//	 * @return
//	 */
//	public Page<AccountExpand> pageFree(int pageNumber, int pageSize,int type,int accountId) {
//		String sql = "FROM tb_account_expand AS a LEFT JOIN tb_account AS b ON a.accountId = b.id WHERE a.state = ? AND b.type = ? AND a.accountId <> ? ORDER BY a.id DESC";
//		Page<AccountExpand> page = dao.paginate(pageNumber, pageSize, "SELECT * ", sql,STATE_ON,type,accountId);
//		for (int i = 0; i < page.getList().size(); i++) {
//			AccountExpand accountExpand = page.getList().get(i);
//			accountExpand.remove("password", "salt");
//		}
//		return page;
//	}
//	
//	/**
//	 * 主播列表
//	 * @param pageNumber
//	 * @param pageSize
//	 * @return
//	 */
//	public Page<AccountExpand> page(int pageNumber, int pageSize) {
//		String sql = "FROM tb_account_expand AS a LEFT JOIN tb_account AS b ON a.accountId = b.id WHERE  b.type = 3 ORDER BY a.id DESC";
//		
//		Page<AccountExpand> page = page(pageNumber, pageSize, "", sql, true);
//		for (int i = 0; i < page.getList().size(); i++) {
//			AccountExpand accountExpand = page.getList().get(i);
//			accountExpand.remove("password", "salt");
//		}
//		return page;
//	}
//	
//	public Page<AccountExpand> page(int pageNumber, int pageSize,int labelId){
//		String format = "FROM tb_account_expand AS a LEFT JOIN tb_account_label AS b ON a.accountId = b.accountId WHERE  b.id = %s ORDER BY a.id DESC";
//		String sql = JMToolSql.format(format, labelId);
//		
//		Page<AccountExpand> page = page(pageNumber, pageSize, "", sql, true);
//		for (int i = 0; i < page.getList().size(); i++) {
//			AccountExpand accountExpand = page.getList().get(i);
//			accountExpand.remove("password", "salt");
//		}
//		return page;
//		
//	}
//	
//	/**
//	 * 推荐主播列表
//	 * @param pageNumber
//	 * @param pageSize
//	 * @param isRecommend:0不推荐1推荐
//	 * @return
//	 */
//	public Page<AccountExpand> pageRecommend(int pageNumber, int pageSize,int isRecommend) {
//		String sql = "FROM tb_account_expand AS a LEFT JOIN tb_account AS b ON a.accountId = b.id WHERE  b.type = 3 AND a.isRecommend = %s ORDER BY a.id DESC";
//		sql = JMToolSql.format(sql,isRecommend);
//		Page<AccountExpand> page = page(pageNumber, pageSize, "", sql, true);
//		for (int i = 0; i < page.getList().size(); i++) {
//			AccountExpand accountExpand = page.getList().get(i);
//			accountExpand.remove("password", "salt");
//		}
//		return page;
//	}
//	
//	/**
//	 * 热门主播列表
//	 * @param pageNumber
//	 * @param pageSize
//	 * @param isHot:0不热门1热门
//	 * @return
//	 */
//	public Page<AccountExpand> pageHot(int pageNumber, int pageSize,int isHot) {
//		String sql = "FROM tb_account_expand AS a LEFT JOIN tb_account AS b ON a.accountId = b.id WHERE  b.type = 3  AND a.isHot = %s ORDER BY a.id DESC";
//		sql = JMToolSql.format(sql,isHot);
//		Page<AccountExpand> page = page(pageNumber, pageSize, "", sql, true);
//		for (int i = 0; i < page.getList().size(); i++) {
//			AccountExpand accountExpand = page.getList().get(i);
//			accountExpand.remove("password", "salt");
//		}
//		return page;
//	}
//	
////	/**
////	 * 附近用户
////	 * @param pageNumber
////	 * @param pageSize
////	 * @param lat
////	 * @param lng
////	 * @param radius
////	 * @return
////	 */
////	public Page<AccountExpand> pageNearby(int pageNumber, int pageSize,double lat,double lng,int radius) {
////		String columns = "*,ROUND(6378.138 * 2 * ASIN(SQRT(POW(SIN((%s * PI() / 180 - s.latitude * PI() / 180) / 2), 2)+COS(%s * PI() / 180) * COS(s.latitude * PI() / 180)* POW(SIN((%s * PI() / 180 - s.longitude * PI() / 180) / 2), 2))) * 1000) AS distance";
////		columns = JMToolSql.format(columns,lat,lat,lng);
////		
////		Tuple4<Double> tuple4 = DistanceUtils.calcBoxByDistFromPt(lng, lat, radius);
////		String from = "FROM tb_account_expand s WHERE (s.longitude BETWEEN %s AND %s) AND (s.latitude BETWEEN %s AND %s)";
////		double lng1 = tuple4.get_1();
////		double lng2 = tuple4.get_2();
////		double lat1 = tuple4.get_3();
////		double lat2 = tuple4.get_4();
////		from = JMToolSql.format(from,lng1,lng2,lat1,lat2);
////		Page<AccountExpand> page = page(pageNumber, pageSize, columns, from, true);
////		return page;
////	} 
//	
//	/**
//	 * 
//	 * @date 2018年12月19日 下午6:15:37
//	 * @author JaysonLee
//	 * @Description: 获取用户的头像昵称
//	 * @reqMethod post
//	 * @paramter
//	 * @pDescription	
//	 * @param accountId
//	 * @return
//	 *
//	 */
//	public AccountExpand getHeadNickByAccountId(int accountId){
//		return JMToolSql.get(cacheName,new AccountExpand(),"select accountId,nick,avatar from tb_account_expand where accountId=?",accountId);
//	}
//	
//	public void joinGroup(String ids){
//		Db.update("update tb_account_expand set groupNum = groupNum + 1 WHERE accountId in ("+ids+")");
//	}
//	
//	public Page<AccountExpand> page(int pageNumber, int pageSize,Integer labelId) {
//		String format = " FROM tb_account_expand AS a LEFT JOIN tb_account_label AS b ON a.accountId = b.accountId WHERE b.id = %s ORDER BY a.id DESC;";;
//		String from = JMToolSql.format(format, labelId);
//		return page(pageNumber, pageSize, "", from, true);
//	}
//	
//	
//	public String getNicksInUserIds(String userIds){
//		List<AccountExpand> list = AccountExpand.dao.find("select nick from tb_account_expand where accountId in ( "+userIds+")");
//		String nick = "";
//		for(AccountExpand userExtend : list){
//			nick += " “"+userExtend.getNick()+"”，";
//		}
//		return nick.substring(0,nick.length()-1) ;
//	}
//	
//	public void quitGroup(String ids){
//		Db.update("update tb_account_expand set groupNum = groupNum - 1 WHERE accountId in ("+ids+")");
//	}
//	
//	public void quitGroup(int userId){
//		Db.update("update tb_account_expand set groupNum = groupNum - 1 WHERE accountId = ?", userId);
//	}
//	
//	public void deleteGroup(int groupId){
//		Db.update("update tb_account_expand set groupNum = groupNum - 1 WHERE accountId in (select userId from social_group_user where groupId = "+groupId+")");
//	}
//	
//	public AccountExpand getByNo(String mobile){
//		return AccountExpand.dao.findFirst("select accountId,nick,avatar,b.mobile from tb_account_expand a inner join tb_account b on a.accountId = b.id where (b.mobile = ? or a.no = ?) limit 1",mobile,mobile);
//	}
//	
//	public Page<AccountExpand> pageByNo(String mobile,int pageNumber,int pageSize){
//		return AccountExpand.dao.paginate(pageNumber, pageSize,"select accountId,nick,avatar,b.mobile","from tb_account_expand a inner join tb_account b on a.accountId = b.id where b.mobile like '%"+mobile+"%'");
//	}
//	
//	
//	public AccountExpand getInfoByUserId(int userId){
//		return AccountExpand.dao.findFirst("select accountId,nick,avatar,b.mobile from tb_account_expand a inner join tb_account b on a.accountId = b.id where b.id = ? limit 1",userId);
//	}
//	
//	
//	/**
//	 * 生成支付密码
//	 */
//	public String getPayPwd(String password){
//		String md5 = JMToolMD5.getMD5((JMToolMD5.getMD5(password)+payPwd));
//		return md5;
//	}
//	
//	
//	/**
//	 * 校验支付密码
//	 */
//	public boolean checkPayPwd(String password, String input){
//		String md5 = JMToolMD5.getMD5((JMToolMD5.getMD5(input)+payPwd));
//		return password.equals(md5);
//	}
//}
